package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.Socket;

public class SwingChat {
    private static final String DIRECCION_SERVER = "127.0.0.1";
    private static final int PUERTO = 55555;
    private static final JFrame frameBase = new JFrame("SwingChat");
    private static Socket socket;
    private static BufferedReader bufferedReader;
    private static BufferedWriter bufferedWriter;
    private JPanel mainPanel;
    private JButton buttonAcceder;
    private JPanel primerPanel;
    private JLabel labelNombre;
    private JTextField textFieldNombreUsuario;
    private JPanel segundoPanel;
    private JRadioButton radioButtonTCP;
    private JRadioButton radioButtonUDP;
    private JLabel labelConexion;
    private JButton buttonEnviarMensaje;
    private JTextArea textAreaChat;
    private JTextField textFieldTextoAEnviar;

    public SwingChat() {
        buttonAcceder.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean conexion = false;
                if (radioButtonTCP.isSelected()) {
                    conexion = intentarConexionTCP();
                    System.out.println("Conexi贸n TCP");
                } else {
                    System.out.println("Conexi贸n UDP");
                }
                if (conexion) {
                    primerPanel.setVisible(false);
                    frameBase.setContentPane(segundoPanel);
                    segundoPanel.setVisible(true);
                    iniciarEscucha();
                }
            }
        });
        buttonEnviarMensaje.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String mensaje = textFieldTextoAEnviar.getText();
                if (!mensaje.isEmpty()) {
                    try {
                        bufferedWriter.write(mensaje + "\n");
                        bufferedWriter.flush();
                        textFieldTextoAEnviar.setText("");
                    } catch (IOException ex) {
                        throw new RuntimeException(ex);
                    }
                }
            }
        });
    }

    public static void main(String[] args) {

        frameBase.setContentPane(new SwingChat().mainPanel);
        frameBase.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frameBase.pack();
        frameBase.setLocationRelativeTo(null);
        frameBase.setResizable(false);
        frameBase.setSize(700, 400);
        frameBase.setVisible(true);

        frameBase.setContentPane(new SwingChat().primerPanel);
    }

    private void iniciarEscucha() {
        Thread escuchar = new Thread(() -> {
            try {
                String respuesta;
                while ((respuesta = bufferedReader.readLine()) != null) {
                    textAreaChat.append(respuesta + "\n");
                }
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        });
        escuchar.start();
    }

    private boolean intentarConexionTCP() {
        try {
            socket = new Socket(DIRECCION_SERVER, PUERTO);
            bufferedReader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            bufferedWriter = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));

            bufferedWriter.write(textFieldNombreUsuario.getText() + "\n");
            bufferedWriter.flush();

            String respuesta = bufferedReader.readLine();
            if (!respuesta.isEmpty()) {
                if (respuesta.equals("Nombre no disponible")) {
                    System.err.println(respuesta);
                    socket.close();
                } else if (respuesta.equals("Conexi贸n correcta")) {
                    System.out.println(respuesta);
                    return true;
                }
                return false;
            }
            return false;
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        primerPanel = new JPanel();
        primerPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        primerPanel.setEnabled(true);
        mainPanel.add(primerPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        textFieldNombreUsuario = new JTextField();
        primerPanel.add(textFieldNombreUsuario, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        buttonAcceder = new JButton();
        buttonAcceder.setEnabled(true);
        buttonAcceder.setText("Acceder");
        primerPanel.add(buttonAcceder, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButtonTCP = new JRadioButton();
        radioButtonTCP.setSelected(true);
        radioButtonTCP.setText("TCP");
        primerPanel.add(radioButtonTCP, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButtonUDP = new JRadioButton();
        radioButtonUDP.setText("UDP (No disponible)");
        primerPanel.add(radioButtonUDP, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelNombre = new JLabel();
        labelNombre.setText("Nombre de usuario:");
        primerPanel.add(labelNombre, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelConexion = new JLabel();
        labelConexion.setText("Tipo de conexi贸n:");
        primerPanel.add(labelConexion, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        segundoPanel = new JPanel();
        segundoPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(segundoPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonEnviarMensaje = new JButton();
        buttonEnviarMensaje.setText("Enviar");
        segundoPanel.add(buttonEnviarMensaje, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldTextoAEnviar = new JTextField();
        segundoPanel.add(textFieldTextoAEnviar, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        textAreaChat = new JTextArea();
        segundoPanel.add(textAreaChat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(radioButtonUDP);
        buttonGroup.add(radioButtonTCP);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
